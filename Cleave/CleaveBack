Shader "Stencil/CleaveBack"
{
    Properties
    {
        [HDR]_ColorTop ("Color Top", Color) = (0, 0, 0, 0)
        [HDR]_ColorBottom ("Color Bottom", Color) = (1, 1, 1, 1)
        _MaskPow ("Mask Power", Float) = 1
    }
    SubShader
    {
        Tags { "RenderType"="Opaque" }
        LOD 100

        Pass
        {
            Cull Front
            Stencil 
            {
                Ref 2 
                Comp GEqual //ref值2比缓冲中的值大于等于时, 通过, 可被绘制
                Pass Replace //通过后把缓冲值刷为2
            }
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"

            float4 _ColorTop;
            float4 _ColorBottom;
            float _MaskPow;

            struct appdata
            {
                float4 vertex : POSITION;
                float2 texcoord0 : TEXCOORD0;
                float2 texcoord1 : TEXCOORD1;
            };

            struct v2f
            {
                float2 uv0 : TEXCOORD0;
                float2 uv1 : TEXCOORD1;
                float4 pos : SV_POSITION;
            };

            v2f vert (appdata v)
            {
                v2f o;
                o.pos = UnityObjectToClipPos(v.vertex);
                o.uv0 = v.texcoord0;
                o.uv1 = v.texcoord1;

                return o;
            }

            fixed4 frag (v2f i) : SV_Target
            {
                //uv mask 
                float uvMask = i.uv1.y;
                uvMask = pow(uvMask, max(0.1, _MaskPow));
                //final color 
                float3 finalCol = lerp(_ColorBottom, _ColorTop, uvMask);

                return float4(finalCol, 1);
            }
            ENDCG
        }
    }
}
